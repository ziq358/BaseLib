apply plugin: 'com.android.library'

android {
    compileSdkVersion rootProject.ext.android.compileSdkVersion
    buildToolsVersion rootProject.ext.android.buildToolsVersion
    defaultConfig {
        minSdkVersion rootProject.ext.android.minSdkVersion
        targetSdkVersion rootProject.ext.android.targetSdkVersion
        versionCode rootProject.ext.android["versionCode"]
        versionName rootProject.ext.android["versionName"]

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath true
            }
        }
    }

    signingConfigs {
        config {
            keyAlias 'zaiqiang'
            keyPassword 'zaiqiang'
            storeFile file('../signature.jks')
            storePassword 'zaiqiang'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.config
        }
    }

    lintOptions {
        abortOnError false
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dataBinding {
        enabled = true
    }

}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar'])

    api "androidx.appcompat:appcompat:1.3.0-alpha02"
    api "androidx.recyclerview:recyclerview:1.2.0-alpha05"


    api 'org.greenrobot:eventbus:3.2.0'
    api ('org.bitbucket.b_c:jose4j:0.5.2'){
        exclude group:'org.slf4j', module: 'slf4j-api'
        transitive = true
    }

    //由于 在lib中R 文件的 id 没有定， 所以 无法 通过注解绑定，也就不需要 annotationProcessor了，
    // 在application项目中 只需要 annotationProcessor 引用 编译规则编译 就行了
    api("com.jakewharton:butterknife:10.2.1") {
        exclude module: 'support-annotations'
        exclude module: 'support-compat'
    }
    annotationProcessor("com.jakewharton:butterknife-compiler:10.2.1") {
        exclude module: 'support-annotations'
    }

    api "com.google.dagger:dagger:2.24"
    annotationProcessor("com.google.dagger:dagger-compiler:2.24") {
        exclude module: 'support-annotations'
    }

    api 'com.itextpdf:itextg:5.5.10'

    api "com.squareup.retrofit2:retrofit:2.8.1"
    api "com.squareup.retrofit2:converter-gson:2.8.1"// 必要依赖，解析json字符所用
    api "com.squareup.retrofit2:adapter-rxjava2:2.8.1" // 必要依赖，和Rxjava结合必须用到，下面会提到
    api "io.reactivex.rxjava2:rxjava:2.2.12"// 必要rxjava2依赖
    api "io.reactivex.rxjava2:rxandroid:2.1.1"// 必要rxandrroid依赖，切线程时需要用到
    api "com.squareup.okhttp3:logging-interceptor:3.9.0" //非必要依赖， log依赖，如果需要打印OkHttpLog需要添加

    api ("com.github.bumptech.glide:glide:4.11.0"){
        exclude group: "com.android.support"
    }
    annotationProcessor ("com.github.bumptech.glide:compiler:4.11.0"){
        exclude module: 'jsr305'
    }
    api "com.kaopiz:kprogresshud:1.2.0"

    api "com.trello.rxlifecycle3:rxlifecycle:3.1.0"
    api "com.trello.rxlifecycle3:rxlifecycle-android:3.1.0"
    api "com.trello.rxlifecycle3:rxlifecycle-components:3.1.0"
}

apply from: './bintrayUpload.gradle'

//apply plugin: 'com.novoda.bintray-release'
//publish {
//    userOrg = 'zaiqiangxiaohuli'
//    repoName = 'anZhuo'
//    groupId = 'com.ziq.base'
//    artifactId = 'base'
//    publishVersion = rootProject.ext.android["versionName"]
//    desc = 'zaiqiang base lib for android develop'
//    website = 'https://github.com/ziq358/BaseLib'
//}